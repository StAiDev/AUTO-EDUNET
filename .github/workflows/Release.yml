

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
            

    steps:
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Use Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.7.5' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: pip install
        run: |
          python -m pip install ez_setup
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      - name: Build
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            pyinstaller --noconsole --onefile -n autoE  --icon icon/ico.ico --add-data "./modules:./modules" --add-data "./resources:./resources" --add-data "./downloads:./downloads" --add-data "./icon:./icon" main.py
          elif [ "$RUNNER_OS" == "Windows" ]; then
            pyinstaller --noconsole --onefile -n autoE  --icon icon/ico.ico --add-data "./modules;./modules" --add-data "./resources;./resources" --add-data "./downloads;./downloads" --add-data "./icon;./icon" main.py
          elif [ "$RUNNER_OS" == "macOS" ]; then
            pyinstaller --noconsole --onefile -n autoE  --icon icon/ico.ico --add-data "./modules:./modules" --add-data "./resources:./resources" --add-data "./downloads:./downloads" --add-data "./icon:./icon" main.py
          fi
        shell: bash
      - name: Release
        uses: actions/upload-artifact@v2
        with:
          path: dist/
            
            
          
